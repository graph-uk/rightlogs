; -*- mode: clojure; -*-
; vim: filetype=clojure

(let [host "127.0.0.1"]
  (tcp-server {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5 {:keep-keys [:host :service :ttl :description]})


(def tell-ops
    (by :service
        (throttle 2 10 ; save only 2 last messages from last 10 seconds
	    (rollup 1 10; send only one message and then all others after 10 seconds
	        prn))))



(let [index (index)]
(streams


    (where (state "FATAL")

	(where (service #"RollupThrottleService1$")
        	tell-ops

	(else (where (service #"RollupThrottleService2$")
        	tell-ops

	(else	tell-ops)))));Email all other fatal events


    (where (service #"TTLService$")
	(with :ttl 10.0 ; set ttl for a certain app
	    index))

    (expired
	(where (not (ttl 0.0))
	    prn)) 

  (where (service #"MetricService$")
    (moving-time-window 10
      (smap (fn [events]
        (let [total (count events)]
          {:service "MetricServiceAnalyzed"
           :metric  total
           :state   (condp < total
                      10 "critical"
                      7 "warning"
                          "ok")}))
        (changed-state prn)))))) 
	